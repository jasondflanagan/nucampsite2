[{"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"2","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"3","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"8","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"9","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"12","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"13","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"17","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"18","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"19","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"20","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"21","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"22","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js":"23","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"24","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":708,"mtime":1638727853104,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1636666421448,"results":"28","hashOfConfig":"27"},{"size":528,"mtime":1637884099018,"results":"29","hashOfConfig":"27"},{"size":2188,"mtime":1638820121170,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1637198618705,"results":"31","hashOfConfig":"27"},{"size":7477,"mtime":1638754667181,"results":"32","hashOfConfig":"27"},{"size":4046,"mtime":1639165760739,"results":"33","hashOfConfig":"27"},{"size":1916,"mtime":1637355721300,"results":"34","hashOfConfig":"27"},{"size":5024,"mtime":1638029996768,"results":"35","hashOfConfig":"27"},{"size":1782,"mtime":1638929501534,"results":"36","hashOfConfig":"27"},{"size":12981,"mtime":1639100647074,"results":"37","hashOfConfig":"27"},{"size":1054,"mtime":1637198503375,"results":"38","hashOfConfig":"27"},{"size":4243,"mtime":1637198496339,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1637198509558,"results":"40","hashOfConfig":"27"},{"size":4757,"mtime":1639192932576,"results":"41","hashOfConfig":"27"},{"size":785,"mtime":1638597094723,"results":"42","hashOfConfig":"27"},{"size":569,"mtime":1638729452641,"results":"43","hashOfConfig":"27"},{"size":590,"mtime":1638595399964,"results":"44","hashOfConfig":"27"},{"size":724,"mtime":1638930572798,"results":"45","hashOfConfig":"27"},{"size":695,"mtime":1638647736882,"results":"46","hashOfConfig":"27"},{"size":591,"mtime":1638827728961,"results":"47","hashOfConfig":"27"},{"size":5737,"mtime":1639108434498,"results":"48","hashOfConfig":"27"},{"size":164,"mtime":1638596976189,"results":"49","hashOfConfig":"27"},{"size":227,"mtime":1638593504410,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1638643514165,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1nchd95",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["106","107"],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],["108","109"],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["110","111","112"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem,\r\n    Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst maxLength = len => val => !(val) || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n\r\nfunction RenderCampsite({campsite}) {\r\n    return (\r\n        <div className=\"col-md-5 m-1\">\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\r\n                    <CardBody>\r\n                        <CardText>{campsite.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({comments, postComment, campsiteId}) {\r\n    if (comments) {\r\n        return (\r\n            <div className=\"col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <Stagger in>\r\n                    {\r\n                        comments.map(comment => {\r\n                            return (\r\n                                <Fade in key={comment.id}>\r\n                                    <div>\r\n                                        <p>\r\n                                            {comment.text}<br />\r\n                                            -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                                        </p>\r\n                                    </div>\r\n                                </Fade>\r\n                            );\r\n                        })\r\n                    }\r\n                </Stagger>\r\n                <CommentForm campsiteId={campsiteId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    }\r\n    return <div />;\r\n}\r\n\r\nclass CommentForm extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                    className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"author\">Your Name</Label>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                        validators={{\r\n                                            minLength: minLength(2), \r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        minLength: 'Must be at least 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"text\">Comment</Label>\r\n                                <Control.textarea model=\".text\" id=\"text\" name=\"text\" rows=\"6\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            <Button type=\"submit\" color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction CampsiteInfo(props) {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.campsite) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>{props.campsite.name}</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderCampsite campsite={props.campsite} />\r\n                    <RenderComments\r\n                        comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        campsiteId={props.campsite.id}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return <div />;\r\n}\r\n\r\nexport default CampsiteInfo;","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["113","114","115","116","117","118","119"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log(\"Heres your current thing:\" + JSON.stringify(values))\n        this.props.postFeedback(values)\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\" >\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h2>Contact Us</h2>\n                                <hr />\n                            </div>\n                        </div>\n                        <div className=\"row row-content align-items-center\">\n                            <div className=\"col-sm-4\">\n                                <h5>Our Address</h5>\n                                <address>\n                                    1 Nucamp Way<br />\n                                    Seattle, WA 98001<br />\n                                    U.S.A.\n                                </address>\n                            </div>\n                            <div className=\"col\">\n                                <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                                <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                            </div>\n                            <div className=\"row row-content\">\n                                <div className=\"col-12\">\n                                    <h2>Send us your Feedback</h2>\n                                    <hr />\n                                </div>\n                                <div className=\"col-md-10\">\n                                    <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                            <Col md={10}>\n                                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                                    placeholder=\"First Name\"\n                                                    className=\"form-control\"\n                                                    validators={{\n                                                        required,\n                                                        minLength: minLength(2),\n                                                        maxLength: maxLength(15)\n                                                    }}\n                                                />\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".firstName\"\n                                                    show=\"touched\"\n                                                    component=\"div\"\n                                                    messages={{\n                                                        required: \"Required\",\n                                                        minLength: \"Must be at least 2 characters\",\n                                                        maxLength: \"Must be at most 15 characters\"\n                                                    }}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                            <Col md={10}>\n                                                <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                                    placeholder=\"Last Name\"\n                                                    className=\"form-control\"\n                                                    validators={{\n                                                        required,\n                                                        minLength: minLength(2),\n                                                        maxLength: maxLength(15)\n                                                    }}\n                                                    />\n                                                    <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".lastName\"\n                                                    show=\"touched\"\n                                                    component=\"div\"\n                                                    messages={{\n                                                        required: \"Required\",\n                                                        minLength: \"Must be at least 2 characters\",\n                                                        maxLength: \"Must be at most 15 characters\"\n                                                    }}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                            <Col md={10}>\n                                                <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                                    placeholder=\"Phone number\"\n                                                    className=\"form-control\"\n                                                    validators={{\n                                                        required,\n                                                        minLength: minLength(10),\n                                                        maxLength: maxLength(15),\n                                                        isNumber\n                                                    }}\n                                                />\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".phoneNum\"\n                                                    show=\"touched\"\n                                                    component=\"div\"\n                                                    messages={{\n                                                        required: \"Required\",\n                                                        minLength: \"Must be at least 10 digits\",\n                                                        maxLength: \"Must be at most 15 digits\",\n                                                        isNumber: \"Must be numbers\"\n                                                    }}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"email\" md={2}>Email</Label>\n                                            <Col md={10}>\n                                                <Control.text model=\".email\" type=\"email\" id=\"email\" name=\"email\"\n                                                    placeholder=\"Email\"\n                                                    className=\"form-control\"\n                                                    validators={{\n                                                        required,\n                                                        validEmail\n                                                    }}\n                                                />\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".email\"\n                                                    show=\"touched\"\n                                                    component=\"div\"\n                                                    messages={{\n                                                        required: \"Required\",\n                                                        validEmail: \"Invalid email address\"\n                                                    }}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"form-group\">\n                                            <Col md={{ size: 4, offset: 2 }}>\n                                                <div className=\"form-check\">\n                                                    <Label check>\n                                                        <Control.checkbox model=\".agree\"\n                                                            name=\"agree\"\n                                                            className=\"form-check-input\" \n                                                        /> {' '}\n                                                        <strong>May we contact you?</strong>\n                                                    </Label>\n                                                </div>\n                                            </Col>\n                                            <Col md={4}>\n                                                <Control.select model=\".contactType\" name=\"contactType\"\n                                                    className=\"form-control\">\n                                                    <option>By Phone</option>\n                                                    <option>By Email</option>\n                                                </Control.select>\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                            <Col md={10}>\n                                                <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                                    rows=\"12\"\n                                                    className=\"form-control\"\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"form-group\">\n                                            <Col md={{ size: 10, offset: 2 }}>\n                                                <Button type=\"submit\" color=\"primary\" >\n                                                    Send Feedback\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </Form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":94,"column":33,"nodeType":"128","messageId":"129","endLine":95,"endColumn":62},{"ruleId":"126","severity":1,"message":"130","line":105,"column":33,"nodeType":"128","messageId":"129","endLine":112,"endColumn":35},{"ruleId":"126","severity":1,"message":"131","line":126,"column":33,"nodeType":"128","messageId":"129","endLine":128,"endColumn":35},{"ruleId":"126","severity":1,"message":"130","line":80,"column":49,"nodeType":"128","messageId":"129","endLine":88,"endColumn":51},{"ruleId":"126","severity":1,"message":"130","line":105,"column":49,"nodeType":"128","messageId":"129","endLine":113,"endColumn":55},{"ruleId":"126","severity":1,"message":"130","line":130,"column":49,"nodeType":"128","messageId":"129","endLine":139,"endColumn":51},{"ruleId":"126","severity":1,"message":"130","line":157,"column":49,"nodeType":"128","messageId":"129","endLine":164,"endColumn":51},{"ruleId":"126","severity":1,"message":"132","line":181,"column":57,"nodeType":"128","messageId":"129","endLine":184,"endColumn":59},{"ruleId":"126","severity":1,"message":"127","line":190,"column":49,"nodeType":"128","messageId":"129","endLine":191,"endColumn":78},{"ruleId":"126","severity":1,"message":"131","line":200,"column":49,"nodeType":"128","messageId":"129","endLine":203,"endColumn":51},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]