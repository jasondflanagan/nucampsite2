{"ast":null,"code":"var _jsxFileName = \"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js\";\nimport { Component } from \"react\";\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CampsiteInfo extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderCampsite(campsite) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-5 m-1\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardImg, {\n          top: true,\n          src: campsite.image,\n          alt: campsite.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            children: campsite.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardText, {\n            children: campsite.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderComments(comments) {\n    if (this.props.campsite.comments) {\n      console.log(\"in if\");\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5 m1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), this.props.campsite.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: comments.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [comments.author, \" -- \", new Intl.DateTimeFormat('en-US', {\n              year: 'numeric',\n              month: 'short',\n              day: '2-digit'\n            }).format(new Date(Date.parse(comment.date)))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)]\n        }, comments.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    } else {\n      console.log(\"in else\");\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  render() {\n    if (this.props.campsite != null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [this.renderCampsite(this.props.campsite), this.renderComments(this.props.comments)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default CampsiteInfo;","map":{"version":3,"sources":["/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js"],"names":["Component","Card","CardImg","CardText","CardBody","CardTitle","CampsiteInfo","constructor","props","renderCampsite","campsite","image","name","description","renderComments","comments","console","log","map","comment","text","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","id","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,SAA5C,QAA6D,YAA7D;;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEH;;AAEDC,EAAAA,cAAc,CAACC,QAAD,EAAW;AAErB,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI,QAAC,IAAD;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,GAAG,MAAZ;AAAa,UAAA,GAAG,EAAEA,QAAQ,CAACC,KAA3B;AAAkC,UAAA,GAAG,EAAED,QAAQ,CAACE;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAA,kCACI,QAAC,SAAD;AAAA,sBAAYF,QAAQ,CAACE;AAArB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,QAAD;AAAA,sBAAWF,QAAQ,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAEDC,EAAAA,cAAc,CAACC,QAAD,EAAW;AACrB,QAAI,KAAKP,KAAL,CAAWE,QAAX,CAAoBK,QAAxB,EAAkC;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKT,KAAL,CAAWE,QAAX,CAAoBK,QAApB,CAA6BG,GAA7B,CAAiCC,OAAO,iBACrC;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,sBAAsBJ,QAAQ,CAACK;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,uBAAsBL,QAAQ,CAACM,MAA/B,UAA2C,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,cAAAA,IAAI,EAAE,SAAR;AAAmBC,cAAAA,KAAK,EAAE,OAA1B;AAAmCC,cAAAA,GAAG,EAAE;AAAxC,aAAjC,EAAsFC,MAAtF,CAA6F,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWV,OAAO,CAACW,IAAnB,CAAT,CAA7F,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAUf,QAAQ,CAACgB,EAAnB;AAAA;AAAA;AAAA;AAAA,gBADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH,KAbD,MAcI;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACJ,0BACI;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACA;;AAEDe,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKxB,KAAL,CAAWE,QAAX,IAAuB,IAA3B,EAAiC;AAC7B,0BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,mBACK,KAAKD,cAAL,CAAoB,KAAKD,KAAL,CAAWE,QAA/B,CADL,EAEK,KAAKI,cAAL,CAAoB,KAAKN,KAAL,CAAWO,QAA/B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPD,MAQK;AACD,0BACI;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ;;AA1DgC;;AA6DrC,eAAeT,YAAf","sourcesContent":["import { Component } from \"react\";\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\n\nclass CampsiteInfo extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    renderCampsite(campsite) {\n\n        return (\n            <div className=\"col-md-5 m-1\">\n                <Card>\n                    <CardImg top src={campsite.image} alt={campsite.name} />\n                    <CardBody>\n                        <CardTitle>{campsite.name}</CardTitle>\n                        <CardText>{campsite.description}</CardText>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n    }\n\n    renderComments(comments) {\n        if (this.props.campsite.comments) {\n            console.log(\"in if\")\n            return (\n                <div className=\"col-md-5 m1\">\n                    <h4>Comments</h4>\n                    {this.props.campsite.comments.map(comment =>\n                        <div key={comments.id}>\n                            <div className=\"row\">{comments.text}</div>\n                            <div className=\"row\">{comments.author} -- {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}\n                            </div>\n                        </div>)}\n                </div>\n            )\n        }\n        else{\n            console.log(\"in else\")\n        return (\n            <div></div>\n        )\n    }\n    }\n\n    render() {\n        if (this.props.campsite != null) {\n            return (\n                <div className=\"row\">\n                    {this.renderCampsite(this.props.campsite)}\n                    {this.renderComments(this.props.comments)}\n                </div>\n            )\n        }\n        else {\n            return (\n                <div></div>\n            )\n        }\n    }\n}\n\nexport default CampsiteInfo;"]},"metadata":{},"sourceType":"module"}