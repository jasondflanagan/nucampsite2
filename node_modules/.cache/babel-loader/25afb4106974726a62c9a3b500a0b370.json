{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Campsites = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    errMess: null,\n    campsites: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_CAMPSITES:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        campsites: action.payload\n      };\n\n    case ActionTypes.CAMPSITES_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        campsites: []\n      };\n\n    case ActionTypes.CAMPSITES_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Campsites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Campsites\");","map":{"version":3,"sources":["/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js"],"names":["ActionTypes","Campsites","state","isLoading","errMess","campsites","action","type","ADD_CAMPSITES","payload","CAMPSITES_LOADING","CAMPSITES_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,YAIX;AAAA,MAJYC,KAIZ,uEAJoB;AAC9BC,IAAAA,SAAS,EAAE,IADmB;AAE9BC,IAAAA,OAAO,EAAE,IAFqB;AAG9BC,IAAAA,SAAS,EAAE;AAHmB,GAIpB;AAAA,MAAXC,MAAW;;AACV,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAW,CAACQ,aAAjB;AACI,aAAM,EAAC,GAAGN,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAC,IAArC;AAA2CC,QAAAA,SAAS,EAAEC,MAAM,CAACG;AAA7D,OAAN;;AACJ,SAAKT,WAAW,CAACU,iBAAjB;AACI,aAAM,EAAC,GAAGR,KAAJ;AAAWC,QAAAA,SAAS,EAAC,IAArB;AAA2BC,QAAAA,OAAO,EAAC,IAAnC;AAAyCC,QAAAA,SAAS,EAAC;AAAnD,OAAN;;AACJ,SAAKL,WAAW,CAACW,gBAAjB;AACI,aAAM,EAAC,GAAGT,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAEE,MAAM,CAACG;AAA5C,OAAN;;AACJ;AACI,aAAOP,KAAP;AARR;AAUH,CAfM;KAAMD,S","sourcesContent":["import * as ActionTypes from './ActionTypes'\n\nexport const Campsites = (state = {\n    isLoading: true,\n    errMess: null,\n    campsites: []\n}, action) => {\n    switch (action.type){\n        case ActionTypes.ADD_CAMPSITES:\n            return{...state, isLoading: false, errMess:null, campsites: action.payload}\n        case ActionTypes.CAMPSITES_LOADING:\n            return{...state, isLoading:true, errMess:null, campsites:[]}\n        case ActionTypes.CAMPSITES_FAILED:\n            return{...state, isLoading:false, errMess: action.payload}\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}