{"ast":null,"code":"import _objectSpread from\"/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createStore,combineReducers,applyMiddleware}from'redux';import{createForms}from'react-redux-form';import{Campsites}from'./campsites';import{Comments}from'./comments';import{Partners}from'./partners';import{Promotions}from'./promotions';import{InitialFeedback}from'./forms';import thunk from'redux-thunk';import logger from'redux-logger';export var ConfigureStore=function ConfigureStore(){var store=createStore(combineReducers(_objectSpread({campsites:Campsites,comments:Comments,partners:Partners,promotions:Promotions},createForms({feedbackForm:InitialFeedback}))),applyMiddleware(thunk,logger));return store;};","map":{"version":3,"sources":["/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","createForms","Campsites","Comments","Partners","Promotions","InitialFeedback","thunk","logger","ConfigureStore","store","campsites","comments","partners","promotions","feedbackForm"],"mappings":"kLAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,OAAQC,WAAR,KAA0B,kBAA1B,CACA,OAASC,SAAT,KAAyB,aAAzB,CACA,OAASC,QAAT,KAAwB,YAAxB,CACA,OAASC,QAAT,KAAwB,YAAxB,CACA,OAASC,UAAT,KAA0B,cAA1B,CACA,OAASC,eAAT,KAAgC,SAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAChC,GAAMC,CAAAA,KAAK,CAAGZ,WAAW,CACrBC,eAAe,gBACXY,SAAS,CAAET,SADA,CAEXU,QAAQ,CAAET,QAFC,CAGXU,QAAQ,CAAET,QAHC,CAIXU,UAAU,CAAET,UAJD,EAKRJ,WAAW,CAAC,CACXc,YAAY,CAAET,eADH,CAAD,CALH,EADM,CAUrBN,eAAe,CAACO,KAAD,CAAQC,MAAR,CAVM,CAAzB,CAaA,MAAOE,CAAAA,KAAP,CACH,CAfM","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport {createForms} from 'react-redux-form';\nimport { Campsites} from './campsites';\nimport { Comments} from './comments';\nimport { Partners} from './partners';\nimport { Promotions} from './promotions';\nimport { InitialFeedback } from './forms';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            campsites: Campsites,\n            comments: Comments,\n            partners: Partners,\n            promotions: Promotions,\n            ...createForms({\n                feedbackForm: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};"]},"metadata":{},"sourceType":"module"}