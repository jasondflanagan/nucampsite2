{"ast":null,"code":"import*as ActionTypes from'./ActionTypes';import{baseUrl}from'../shared/baseUrl';export var fetchCampsites=function fetchCampsites(){return function(dispatch){dispatch(campsitesLoading());return fetch(baseUrl+'campsites').then(function(response){if(response.ok){return response;}else{var error=new Error(\"Error \".concat(response.status,\": \").concat(response.statusText));error.response=response;throw error;}},function(error){var errMess=new Error(error.message);throw errMess;}).then(function(response){return response.json();}).then(function(campsites){return dispatch(addCampsites(campsites));}).catch(function(error){return dispatch(campsitesFailed(error.message));});};};export var campsitesLoading=function campsitesLoading(){return{type:ActionTypes.CAMPSITES_LOADING};};export var campsitesFailed=function campsitesFailed(errMess){return{type:ActionTypes.CAMPSITES_FAILED,payload:errMess};};export var addCampsites=function addCampsites(campsites){return{type:ActionTypes.ADD_CAMPSITES,payload:campsites};};export var fetchComments=function fetchComments(){return function(dispatch){return fetch(baseUrl+'comments').then(function(response){if(response.ok){return response;}else{var error=new Error(\"Error \".concat(response.status,\": \").concat(response.statusText));error.response=response;throw error;}},function(error){var errMess=new Error(error.message);throw errMess;}).then(function(response){return response.json();}).then(function(comments){return dispatch(addComments(comments));}).catch(function(error){return dispatch(commentsFailed(error.message));});};};export var addComments=function addComments(comments){return{type:ActionTypes.ADD_COMMENTS,payload:comments};};export var addComment=function addComment(comment){return{type:ActionTypes.ADD_COMMENT,payload:comment};};export var postComment=function postComment(campsiteId,rating,author,text){return function(dispatch){var newComment={campsiteId:campsiteId,rating:rating,author:author,text:text};newComment.date=new Date().toISOString();return fetch(baseUrl+'comments',{method:\"POST\",body:JSON.stringify(newComment),headers:{\"Content-Type\":\"application/json\"}}).then(function(response){if(response.ok){return response;}else{var error=new Error(\"Error \".concat(response.status,\": \").concat(response.statusText));error.response=response;throw error;}},function(error){throw error;}).then(function(response){return response.json();}).then(function(response){return dispatch(addComment(response));}).catch(function(error){console.log('post comment',error.message);alert('Your comment could not be posted\\nError: '+error.message);});};};export var commentsFailed=function commentsFailed(errMess){return{type:ActionTypes.COMMENTS_FAILED,payload:errMess};};export var fetchPromotions=function fetchPromotions(){return function(dispatch){dispatch(promotionsLoading());return fetch(baseUrl+'promotions').then(function(response){if(response.ok){return response;}else{var error=new Error(\"Error \".concat(response.status,\": \").concat(response.statusText));error.response=response;throw error;}},function(error){var errMess=new Error(error.message);throw errMess;}).then(function(response){return response.json();}).then(function(promotions){return dispatch(addPromotions(promotions));}).catch(function(error){return dispatch(promotionsFailed(error.message));});};};export var promotionsLoading=function promotionsLoading(){return{type:ActionTypes.PROMOTIONS_LOADING};};export var promotionsFailed=function promotionsFailed(errMess){return{type:ActionTypes.PROMOTIONS_FAILED,payload:errMess};};export var addPromotions=function addPromotions(promotions){return{type:ActionTypes.ADD_PROMOTIONS,payload:promotions};};","map":{"version":3,"sources":["/Users/jasonflanagan/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","fetchCampsites","dispatch","campsitesLoading","fetch","then","response","ok","error","Error","status","statusText","errMess","message","json","campsites","addCampsites","catch","campsitesFailed","type","CAMPSITES_LOADING","CAMPSITES_FAILED","payload","ADD_CAMPSITES","fetchComments","comments","addComments","commentsFailed","ADD_COMMENTS","addComment","comment","ADD_COMMENT","postComment","campsiteId","rating","author","text","newComment","date","Date","toISOString","method","body","JSON","stringify","headers","console","log","alert","COMMENTS_FAILED","fetchPromotions","promotionsLoading","promotions","addPromotions","promotionsFailed","PROMOTIONS_LOADING","PROMOTIONS_FAILED","ADD_PROMOTIONS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n\n\nexport const fetchCampsites = () => dispatch => {\n    dispatch(campsitesLoading());\n\n    return fetch(baseUrl + 'campsites')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(campsites => dispatch(addCampsites(campsites)))\n        .catch(error => dispatch(campsitesFailed(error.message)));\n}\n\nexport const campsitesLoading = () => ({\n    type: ActionTypes.CAMPSITES_LOADING\n})\n\nexport const campsitesFailed = errMess => ({\n    type: ActionTypes.CAMPSITES_FAILED,\n    payload: errMess\n})\n\nexport const addCampsites = campsites => ({\n    type: ActionTypes.ADD_CAMPSITES,\n    payload: campsites\n})\n\nexport const fetchComments = () => dispatch => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n})\n\nexport const addComment = comment => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n})\n\nexport const postComment = (campsiteId, rating, author, text) => dispatch =>{\n\n    const newComment = {\n        campsiteId: campsiteId,\n        rating: rating,\n        author: author,\n        text: text\n    }\n    newComment.date = new Date().toISOString()\n\n    return fetch(baseUrl+ 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    }).then(response =>{\n        if(response.ok){\n            return response\n        }\n        else {\n            const error = new Error(`Error ${response.status}: ${response.statusText}`)\n            error.response = response\n            throw error\n        }\n        },\n        error =>{throw error}\n    ).then(response => response.json()\n    ).then(response => dispatch(addComment(response))\n    ).catch(error => {\n        console.log('post comment', error.message);\n        alert('Your comment could not be posted\\nError: ' + error.message);\n    })\n\n}\n\nexport const commentsFailed = errMess => ({\n    type:ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n})\n\nexport const fetchPromotions = () => dispatch => {\n    dispatch(promotionsLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromotions(promotions)))\n        .catch(error => dispatch(promotionsFailed(error.message)));\n}\n\nexport const promotionsLoading = () => ({\n    type: ActionTypes.PROMOTIONS_LOADING\n})\n\nexport const promotionsFailed = errMess => ({\n    type: ActionTypes.PROMOTIONS_FAILED,\n    payload: errMess\n})\n\nexport const addPromotions = promotions => ({\n    type: ActionTypes.ADD_PROMOTIONS,\n    payload: promotions\n})"]},"metadata":{},"sourceType":"module"}